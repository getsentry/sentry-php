#!/usr/bin/env php
<?php

// Maximize error reporting
error_reporting(E_ALL | E_STRICT);

require(__DIR__ . '/../vendor/autoload.php');

function raven_cli_test($command, $args)
{
    // Do something silly
    try {
        throw new Exception('This is a test exception sent from the Raven CLI.');
    } catch (Exception $ex) {
        return $ex;
    }
}

function cmd_test($dsn)
{
    if (empty($dsn)) {
        exit('ERROR: Missing DSN value');
    }

    $client = \Raven\ClientBuilder::create([
        'server' => $dsn,
        'project_root' => realpath(__DIR__ . '/../'),
    ])->getClient();

    echo "Sending a test event:\n";

    $ex = raven_cli_test("command name", ["foo" => "bar"]);
    $event_id = $client->captureException($ex);

    echo "-> event ID: $event_id\n";

    $last_error = $client->getLastError();
    if (!empty($last_error)) {
        exit("ERROR: There was an error sending the test event:\n  " . $last_error);
    }

    echo "\n";
    echo "Done!";
}


function main()
{
    global $argv;

    if (!isset($argv[1])) {
        exit('Usage: sentry test <dsn>');
    }

    $cmd = $argv[1];

    switch ($cmd) {
        case 'test':
            cmd_test(@$argv[2]);
            break;
        default:
            exit('Usage: sentry test <dsn>');
    }
}

main();
